openapi: 3.0.3
info:
  title: HubSpot CRM Integration API
  description: >
    This API integrates with HubSpot to create or update contacts, deals, and tickets.
    It also retrieves newly created CRM objects from a local database.
  version: "1.0.0"

servers:
  - url: /api
    description: "Base path for CRM routes."

paths:
  /contacts:
    post:
      summary: Create a new HubSpot contact
      description: >
        Creates a new contact in HubSpot if it doesn't exist, and stores a local record.
      operationId: createContact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          description: "Successfully created or upserted contact."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertContactResponse'
        '400':
          description: "Validation error (missing or invalid fields)."
        '500':
          description: "Server error, or unexpected exception."

    put:
      summary: Update an existing contact (upsert logic)
      description: >
        If the contact already exists (based on email), it updates it. Otherwise, it creates a new one.
      operationId: updateContact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          description: "Successfully upserted contact."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertContactResponse'
        '400':
          description: "Validation error (missing or invalid fields)."
        '500':
          description: "Server error, or unexpected exception."

  /deals:
    post:
      summary: Create a new HubSpot deal
      description: >
        Creates a new deal in HubSpot if it doesn't exist, and optionally associates it with a contact.
      operationId: createDeal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deal'
      responses:
        '200':
          description: "Successfully created or upserted deal."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertDealResponse'
        '400':
          description: "Validation error (missing or invalid fields)."
        '500':
          description: "Server error, or unexpected exception."

    put:
      summary: Update or upsert a HubSpot deal
      description: >
        If the deal exists (based on dealname), updates it; else creates a new one.
      operationId: updateDeal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deal'
      responses:
        '200':
          description: "Successfully upserted deal."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertDealResponse'
        '400':
          description: "Validation error (missing or invalid fields)."
        '500':
          description: "Server error, or unexpected exception."

  /tickets:
    post:
      summary: Create a new HubSpot ticket
      description: >
        Always creates a new ticket in HubSpot, never updates existing tickets.  
        Optionally associates the ticket with a contact and deal if provided.
      operationId: createTicket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '201':
          description: "Successfully created a new ticket."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTicketResponse'
        '400':
          description: "Validation error (missing or invalid fields)."
        '500':
          description: "Server error, or unexpected exception."

  /new-crm-objects:
    get:
      summary: Retrieve newly created CRM objects from local DB
      description: >
        Returns locally stored new contacts, deals, or tickets.  
        Query params:
          - **objectType** = "contacts" | "deals" | "tickets"  
          - **page** = 1-based page number  
          - **limit** = number of results per page  
      operationId: getNewCrmObjects
      parameters:
        - in: query
          name: objectType
          schema:
            type: string
            enum: [contacts, deals, tickets]
          description: "Filter the type of CRM object to retrieve."
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: "Which page of results to return."
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: "Number of objects per page."
      responses:
        '200':
          description: "Successfully retrieved new CRM objects."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNewCrmObjectsResponse'
        '500':
          description: "Server error, or unexpected exception."

components:
  schemas:
    Contact:
      type: object
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Doe
        phone:
          type: string
          example: +1-202-555-0147
      required: ["email", "firstname", "lastname", "phone"]

    Deal:
      type: object
      properties:
        dealname:
          type: string
          example: "New Big Deal"
        amount:
          type: number
          format: float
          example: 999.99
        dealstage:
          type: string
          example: appointmentscheduled
        contact_id:
          type: string
          example: CONTACT_123
      required: ["dealname", "amount", "dealstage"]

    Ticket:
      type: object
      properties:
        subject:
          type: string
          example: "Website is down"
        description:
          type: string
          example: "We cannot access the main site."
        category:
          type: string
          example: technical_issue
        pipeline:
          type: string
          example: support_pipeline
        hs_ticket_priority:
          type: string
          example: HIGH
        hs_pipeline_stage:
          type: string
          example: "1"
        contact_id:
          type: string
          example: CONTACT_123
        deal_id:
          type: string
          example: DEAL_999
      required:
        - subject
        - description
        - category
        - pipeline
        - hs_ticket_priority
        - hs_pipeline_stage

    UpsertContactResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Request successful"
        data:
          type: object
          properties:
            contact:
              type: object
              description: "Resulting contact object from HubSpot"
      required: ["success", "data"]

    UpsertDealResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Deal upserted"
        data:
          type: object
          properties:
            deal:
              type: object
              description: "Resulting deal object from HubSpot"
      required: ["success", "data"]

    CreateTicketResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Request successful"
        data:
          type: object
          properties:
            ticket:
              type: object
              description: "Resulting ticket object from HubSpot"
        status_code:
          type: integer
          example: 201

    GetNewCrmObjectsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Request successful"
        data:
          type: object
          properties:
            page:
              type: integer
              example: 1
            limit:
              type: integer
              example: 10
            total:
              type: integer
              example: 47
            results:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    example: 101
                  external_id:
                    type: string
                    example: "CONTACT_123"
                  object_type:
                    type: string
                    enum: [contacts, deals, tickets]
                  name:
                    type: string
                    example: "john@example.com"
                  created_date:
                    type: string
                    format: date-time
                  updated_date:
                    type: string
                    format: date-time
      required: ["success", "data"]

